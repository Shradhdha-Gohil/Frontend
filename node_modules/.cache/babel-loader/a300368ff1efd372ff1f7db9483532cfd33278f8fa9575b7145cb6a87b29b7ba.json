{"ast":null,"code":"var _jsxFileName = \"/Users/aditiakhauri/Desktop/Upload/new/Frontend/src/components/pages/upload.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useCallback, useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport Navigation from \"../inc/navigation\";\nimport Footer from \"../inc/footer\";\nimport { useDropzone } from 'react-dropzone';\nimport '/Users/aditiakhauri/Desktop/Upload/new/Frontend/src/components/pagesCSS/UploadCSS.css';\nimport cloudIconUrl from '/Users/aditiakhauri/Desktop/Upload/new/Frontend/src/components/images/cloud.svg';\nimport { sendDataToBackend } from \"../inc/apiService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageUploadComponent = async () => {\n  _s();\n  const navigate = useNavigate();\n  const [result, setResult] = useState(null);\n  const handleClose = () => {\n    setShowModal(false);\n    navigate(\"/dashboard\");\n  };\n  try {\n    const data = await sendDataToBackend(\"classify\", formData); // Make sure this endpoint is correct\n    setResult(data.message);\n    // Handle the response data as needed\n  } catch (error) {\n    console.error(\"Failed to send data:\", error);\n    // Handle the error appropriately\n  }\n};\n_s(ImageUploadComponent, \"EYbMegHZi3EGHrCEpNvbMtdGToI=\", false, function () {\n  return [useNavigate];\n});\n_c = ImageUploadComponent;\nconst Upload = () => {\n  _s2();\n  const [files, setFiles] = useState([]);\n  const onDrop = useCallback(acceptedFiles => {\n    // Since multiple is false, only take the first file even if user drops multiple\n    const file = acceptedFiles[0];\n    if (file && file.type.startsWith('image/')) {\n      setFiles([{\n        ...file,\n        preview: URL.createObjectURL(file)\n      }]);\n    }\n  }, [setFiles]); // Depend on setFiles instead of files to avoid re-creating this callback unnecessarily\n\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop,\n    multiple: false // Only allow one file to be dropped at a time\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ...getRootProps(),\n      className: `dropzone ${isDragActive ? 'active' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: cloudIconUrl,\n        alt: \"Cloud Upload Icon\",\n        className: \"cloud-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), isDragActive ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"fontp\",\n        children: \"Drop the images here ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drag 'n' drop some images here, or click to select images\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), files.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"submit-button\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preview\",\n      children: files.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preview-image\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: file.preview,\n          style: {\n            width: '100%'\n          },\n          alt: \"Preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, file.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close\",\n          onClick: handleClose,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: result\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s2(Upload, \"WIl6CUOsqIXlMBOpQTyg2ulEKS0=\", false, function () {\n  return [useDropzone];\n});\n_c2 = Upload;\nexport default Upload;\nvar _c, _c2;\n$RefreshReg$(_c, \"ImageUploadComponent\");\n$RefreshReg$(_c2, \"Upload\");","map":{"version":3,"names":["React","useCallback","useState","useNavigate","Navigation","Footer","useDropzone","cloudIconUrl","sendDataToBackend","jsxDEV","_jsxDEV","ImageUploadComponent","_s","navigate","result","setResult","handleClose","setShowModal","data","formData","message","error","console","_c","Upload","_s2","files","setFiles","onDrop","acceptedFiles","file","type","startsWith","preview","URL","createObjectURL","getRootProps","getInputProps","isDragActive","multiple","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","length","map","style","width","name","showModal","onClick","_c2","$RefreshReg$"],"sources":["/Users/aditiakhauri/Desktop/Upload/new/Frontend/src/components/pages/upload.js"],"sourcesContent":["import React, { useCallback, useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport Navigation from \"../inc/navigation\";\nimport Footer from \"../inc/footer\";\nimport { useDropzone } from 'react-dropzone';\nimport '/Users/aditiakhauri/Desktop/Upload/new/Frontend/src/components/pagesCSS/UploadCSS.css'\nimport cloudIconUrl from '/Users/aditiakhauri/Desktop/Upload/new/Frontend/src/components/images/cloud.svg';\nimport { sendDataToBackend } from \"../inc/apiService\";\n\nconst ImageUploadComponent = async () => {\n  const navigate = useNavigate();\n  const [result, setResult] = useState(null);\n\n\n    const handleClose = () => {\n      setShowModal(false);\n      navigate(\"/dashboard\");\n    };\n\n  \n\n    try {\n      const data = await sendDataToBackend(\"classify\", formData); // Make sure this endpoint is correct\n      setResult(data.message);\n      // Handle the response data as needed\n    } catch (error) {\n      console.error(\"Failed to send data:\", error);\n      // Handle the error appropriately\n    }\n  };\n\nconst Upload = () => {\n  const [files, setFiles] = useState([]);\n\n  const onDrop = useCallback(acceptedFiles => {\n    // Since multiple is false, only take the first file even if user drops multiple\n    const file = acceptedFiles[0];\n    if (file && file.type.startsWith('image/')) {\n      setFiles([{...file, preview: URL.createObjectURL(file)}]);\n    }\n  }, [setFiles]); // Depend on setFiles instead of files to avoid re-creating this callback unnecessarily\n  \n  const {getRootProps, getInputProps, isDragActive} = useDropzone({\n    onDrop,\n    multiple: false, // Only allow one file to be dropped at a time\n  });\n  \n  return (\n    \n    <div className=\"upload-container\">\n      <Navigation />\n      <div {...getRootProps()} className={`dropzone ${isDragActive ? 'active' : ''}`}>\n        <img src={cloudIconUrl} alt=\"Cloud Upload Icon\" className=\"cloud-icon\" />\n        <input {...getInputProps()} />\n        {isDragActive ? (\n          <p className=\"fontp\">Drop the images here ...</p>\n        ) : (\n          <p>Drag 'n' drop some images here, or click to select images</p>\n        )}\n        {files.length > 0 && (\n          <button type=\"button\" className=\"submit-button\">\n            Submit\n          </button>\n        )}\n      </div>\n      \n      <div className=\"preview\">\n        {files.map(file => (\n          <div key={file.name} className=\"preview-image\">\n            <img src={file.preview} style={{width: '100%'}} alt=\"Preview\" />\n            <p>{file.name}</p>\n          </div>\n        ))}\n      </div>\n      {showModal && (\n          <div className=\"modal\">\n            <div className=\"modal-content\">\n              <span className=\"close\" onClick={handleClose}>&times;</span>\n              <p>{result}</p>\n              <button onClick={handleClose}>Close</button>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n  \n};\n\nexport default Upload;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}