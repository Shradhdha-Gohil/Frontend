{"ast":null,"code":"var _jsxFileName = \"/Users/aditiakhauri/Desktop/Upload/new/Frontend/src/components/pages/upload.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport Navigation from \"../inc/navigation\";\nimport { useDropzone } from 'react-dropzone';\nimport Lottie from 'react-lottie';\nimport Footer from \"../inc/footer\";\nimport animationData1 from '../../assets/upload.json';\nimport '/Users/aditiakhauri/Desktop/Upload/new/Frontend/src/components/pagesCSS/UploadCSS.css'; // Adjust the path according to your project structure\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst defaultOptions1 = {\n  loop: true,\n  autoplay: true,\n  animationData: animationData1,\n  rendererSettings: {\n    preserveAspectRatio: 'xMidYMid slice'\n  }\n};\nconst Upload = () => {\n  _s();\n  const navigate = useNavigate();\n  const [files, setFiles] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [result, setResult] = useState('');\n  const items = [{\n    lottieOptions: defaultOptions1\n  }];\n  const [analyzing, setAnalyzing] = useState(false);\n  const onDrop = useCallback(acceptedFiles => {\n    const file = acceptedFiles[0];\n    if (file && file.type.startsWith('image/')) {\n      setFiles([{\n        ...file,\n        preview: URL.createObjectURL(file)\n      }]);\n    }\n  }, []);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setAnalyzing(true);\n    // Simulate sending data to backend and receiving a result\n    setShowModal(true);\n    setResult(\"Image analysis result here\"); // Placeholder for backend response\n  };\n\n  const handleCancel = () => {\n    setAnalyzing(false); // Show the Analyze Image button again\n  };\n\n  const handleAddToBlockchain = () => {\n    // Logic for adding to blockchain\n    console.log(\"Adding to blockchain...\");\n  };\n  const handleCloseModal = () => {\n    setShowModal(false);\n    navigate('/dashboard'); // Adjust the navigate path as needed\n  };\n\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop,\n    multiple: false\n  });\n  const handleReUpload = () => {\n    setFiles([]); // Clears out the current files state, allowing for a new upload\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ...getRootProps(),\n      className: `dropzone ${isDragActive ? 'active' : ''}`,\n      children: [files.length === 0 &&\n      /*#__PURE__*/\n      // Only show if there are no files\n      _jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Lottie, {\n          options: defaultOptions1,\n          height: 300,\n          width: 300\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ...getInputProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), isDragActive ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Drop the images here ...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Drag 'n' drop some images here, or click to select images\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), files.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preview-image\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: file.preview,\n          alt: \"Preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, file.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)), files.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          className: \"submit-button\",\n          children: \"Analyze Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleReUpload,\n          className: \"reupload-button\",\n          children: \"Re-upload Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(Upload, \"31ZKAKlNGFRY55moKkQcoowcglo=\", false, function () {\n  return [useNavigate, useDropzone];\n});\n_c = Upload;\nexport default Upload;\nvar _c;\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["React","useCallback","useState","useNavigate","Navigation","useDropzone","Lottie","Footer","animationData1","jsxDEV","_jsxDEV","Fragment","_Fragment","defaultOptions1","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","Upload","_s","navigate","files","setFiles","showModal","setShowModal","result","setResult","items","lottieOptions","analyzing","setAnalyzing","onDrop","acceptedFiles","file","type","startsWith","preview","URL","createObjectURL","handleSubmit","event","preventDefault","handleCancel","handleAddToBlockchain","console","log","handleCloseModal","getRootProps","getInputProps","isDragActive","multiple","handleReUpload","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","options","height","width","map","src","alt","name","onClick","_c","$RefreshReg$"],"sources":["/Users/aditiakhauri/Desktop/Upload/new/Frontend/src/components/pages/upload.js"],"sourcesContent":["import React, { useCallback, useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport Navigation from \"../inc/navigation\";\nimport { useDropzone } from 'react-dropzone';\nimport Lottie from 'react-lottie';\nimport Footer from \"../inc/footer\";\nimport animationData1 from '../../assets/upload.json';\nimport '/Users/aditiakhauri/Desktop/Upload/new/Frontend/src/components/pagesCSS/UploadCSS.css'; // Adjust the path according to your project structure\n\nconst defaultOptions1 = {\n  loop: true,\n  autoplay: true, \n  animationData: animationData1,\n  rendererSettings: {\n    preserveAspectRatio: 'xMidYMid slice'\n  }\n};\n\nconst Upload = () => {\n  const navigate = useNavigate();\n  const [files, setFiles] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [result, setResult] = useState('');\n  const items =[{lottieOptions: defaultOptions1}]\n  const [analyzing, setAnalyzing] = useState(false);\n\n  const onDrop = useCallback(acceptedFiles => {\n    const file = acceptedFiles[0];\n    if (file && file.type.startsWith('image/')) {\n      setFiles([{\n        ...file,\n        preview: URL.createObjectURL(file)\n      }]);\n    }\n  }, []);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setAnalyzing(true);\n    // Simulate sending data to backend and receiving a result\n    setShowModal(true);\n    setResult(\"Image analysis result here\"); // Placeholder for backend response\n  };\n  const handleCancel = () => {\n    setAnalyzing(false); // Show the Analyze Image button again\n  };\n\n  const handleAddToBlockchain = () => {\n    // Logic for adding to blockchain\n    console.log(\"Adding to blockchain...\");\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n    navigate('/dashboard'); // Adjust the navigate path as needed\n  };\n\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({\n    onDrop,\n    multiple: false,\n  });\n\n  const handleReUpload = () => {\n    setFiles([]); // Clears out the current files state, allowing for a new upload\n  };\n\n  return (\n    <div className=\"upload-container\">\n      <Navigation />\n      <div {...getRootProps()} className={`dropzone ${isDragActive ? 'active' : ''}`}>\n        {/* Conditionally render the Lottie animation and the \"drag n drop...\" text */}\n        {files.length === 0 && ( // Only show if there are no files\n          <>\n            <Lottie options={defaultOptions1} height={300} width={300} />\n            <input {...getInputProps()} />\n            {isDragActive ? (\n              <p>Drop the images here ...</p>\n            ) : (\n              <p>Drag 'n' drop some images here, or click to select images</p>\n            )}\n          </>\n        )}\n\n        {/* Preview uploaded image */}\n        {files.map(file => (\n          <div key={file.name} className=\"preview-image\">\n            <img src={file.preview} alt=\"Preview\" />\n            <p>{file.name}</p>\n          </div>\n        ))}\n        {/* Show the Analyze Image button if an image is uploaded */}\n        {files.length > 0 && (\n          <div>\n            <button onClick={handleSubmit} className=\"submit-button\">\n              Analyze Image\n            </button>\n            <button onClick={handleReUpload} className=\"reupload-button\">\n              Re-upload Image\n            </button>\n          </div>\n        )}\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default Upload;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}