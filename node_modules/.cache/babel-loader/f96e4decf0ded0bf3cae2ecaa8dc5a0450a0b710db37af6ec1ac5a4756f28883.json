{"ast":null,"code":"var _jsxFileName = \"/Users/aditiakhauri/Desktop/Upload/new/Frontend/src/components/pages/upload.js\";\nimport React, { useCallback, useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport Navigation from \"../inc/navigation\";\nimport Footer from \"../inc/footer\";\nimport { useDropzone } from 'react-dropzone';\nimport '/Users/aditiakhauri/Desktop/Upload/new/Frontend/src/components/pagesCSS/UploadCSS.css';\nimport cloudIconUrl from '/Users/aditiakhauri/Desktop/Upload/new/Frontend/src/components/images/cloud.svg';\nimport { sendDataToBackend } from \"../inc/apiService\";\n\n//   try {\n//     const data = await sendDataToBackend(\"classify\", formData); // Make sure this endpoint is correct\n//     setResult(data.message);\n//     // Handle the response data as needed\n//   } catch (error) {\n//     console.error(\"Failed to send data:\", error);\n//     // Handle the error appropriately\n//   }\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Upload = () => {\n  var _s = $RefreshSig$();\n  return _s(async () => {\n    _s();\n    const navigate = useNavigate();\n    //const [result, setResult] = useState(null);\n    const [files, setFiles] = useState([]);\n    const handleClose = () => {\n      setShowModal(false);\n      navigate(\"/dashboard\");\n    };\n    const onDrop = useCallback(acceptedFiles => {\n      // Since multiple is false, only take the first file even if user drops multiple\n      const file = acceptedFiles[0];\n      if (file && file.type.startsWith('image/')) {\n        setFiles([{\n          ...file,\n          preview: URL.createObjectURL(file)\n        }]);\n      }\n    }, [setFiles]); // Depend on setFiles instead of files to avoid re-creating this callback unnecessarily\n\n    const {\n      getRootProps,\n      getInputProps,\n      isDragActive\n    } = useDropzone({\n      onDrop,\n      multiple: false // Only allow one file to be dropped at a time\n    });\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-container\",\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ...getRootProps(),\n        className: `dropzone ${isDragActive ? 'active' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: cloudIconUrl,\n          alt: \"Cloud Upload Icon\",\n          className: \"cloud-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ...getInputProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), isDragActive ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"fontp\",\n          children: \"Drop the images here ...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Drag 'n' drop some images here, or click to select images\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), files.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"submit-button\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preview\",\n        children: files.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"preview-image\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: file.preview,\n            style: {\n              width: '100%'\n            },\n            alt: \"Preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: file.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, file.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"close\",\n            onClick: handleClose,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: result\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this);\n  }, \"5GhlPWkrHvwwQU25MRJGW0K5Wng=\", false, function () {\n    return [useNavigate, useDropzone];\n  });\n};\nexport default Upload;","map":{"version":3,"names":["React","useCallback","useState","useNavigate","Navigation","Footer","useDropzone","cloudIconUrl","sendDataToBackend","jsxDEV","_jsxDEV","Upload","_s","$RefreshSig$","navigate","files","setFiles","handleClose","setShowModal","onDrop","acceptedFiles","file","type","startsWith","preview","URL","createObjectURL","getRootProps","getInputProps","isDragActive","multiple","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","length","map","style","width","name","showModal","onClick","result"],"sources":["/Users/aditiakhauri/Desktop/Upload/new/Frontend/src/components/pages/upload.js"],"sourcesContent":["import React, { useCallback, useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport Navigation from \"../inc/navigation\";\nimport Footer from \"../inc/footer\";\nimport { useDropzone } from 'react-dropzone';\nimport '/Users/aditiakhauri/Desktop/Upload/new/Frontend/src/components/pagesCSS/UploadCSS.css'\nimport cloudIconUrl from '/Users/aditiakhauri/Desktop/Upload/new/Frontend/src/components/images/cloud.svg';\nimport { sendDataToBackend } from \"../inc/apiService\";\n\n  //   try {\n  //     const data = await sendDataToBackend(\"classify\", formData); // Make sure this endpoint is correct\n  //     setResult(data.message);\n  //     // Handle the response data as needed\n  //   } catch (error) {\n  //     console.error(\"Failed to send data:\", error);\n  //     // Handle the error appropriately\n  //   }\n  // };\n\nconst Upload = () => async () => {\n  const navigate = useNavigate();\n  //const [result, setResult] = useState(null);\n  const [files, setFiles] = useState([]);\n\n  const handleClose = () => {\n    setShowModal(false);\n    navigate(\"/dashboard\");\n  };\n\n  const onDrop = useCallback(acceptedFiles => {\n    // Since multiple is false, only take the first file even if user drops multiple\n    const file = acceptedFiles[0];\n    if (file && file.type.startsWith('image/')) {\n      setFiles([{...file, preview: URL.createObjectURL(file)}]);\n    }\n  }, [setFiles]); // Depend on setFiles instead of files to avoid re-creating this callback unnecessarily\n  \n  const {getRootProps, getInputProps, isDragActive} = useDropzone({\n    onDrop,\n    multiple: false, // Only allow one file to be dropped at a time\n  });\n  \n  return (\n    \n    <div className=\"upload-container\">\n      <Navigation />\n      <div {...getRootProps()} className={`dropzone ${isDragActive ? 'active' : ''}`}>\n        <img src={cloudIconUrl} alt=\"Cloud Upload Icon\" className=\"cloud-icon\" />\n        <input {...getInputProps()} />\n        {isDragActive ? (\n          <p className=\"fontp\">Drop the images here ...</p>\n        ) : (\n          <p>Drag 'n' drop some images here, or click to select images</p>\n        )}\n        {files.length > 0 && (\n          <button type=\"button\" className=\"submit-button\">\n            Submit\n          </button>\n        )}\n      </div>\n      \n      <div className=\"preview\">\n        {files.map(file => (\n          <div key={file.name} className=\"preview-image\">\n            <img src={file.preview} style={{width: '100%'}} alt=\"Preview\" />\n            <p>{file.name}</p>\n          </div>\n        ))}\n      </div>\n      {showModal && (\n          <div className=\"modal\">\n            <div className=\"modal-content\">\n              <span className=\"close\" onClick={handleClose}>&times;</span>\n              <p>{result}</p>\n              <button onClick={handleClose}>Close</button>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n  \n};\n\nexport default Upload;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}