{"ast":null,"code":"var _jsxFileName = \"/Users/aditiakhauri/Desktop/Upload/new/Frontend/src/components/pages/upload.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport Navigation from \"../inc/navigation\";\nimport { useDropzone } from 'react-dropzone';\nimport Lottie from 'react-lottie';\nimport animationData1 from '../../assets/upload.json';\nimport '/Users/aditiakhauri/Desktop/Upload/new/Frontend/src/components/pagesCSS/UploadCSS.css'; // Adjust the path according to your project structure\nimport cloudIconUrl from '/Users/aditiakhauri/Desktop/Upload/new/Frontend/src/components/images/cloud.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultOptions1 = {\n  loop: true,\n  autoplay: true,\n  animationData: animationData1,\n  rendererSettings: {\n    preserveAspectRatio: 'xMidYMid slice'\n  }\n};\nconst Upload = () => {\n  _s();\n  const navigate = useNavigate();\n  const [files, setFiles] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [result, setResult] = useState('');\n  const items = [{\n    lottieOptions: defaultOptions1\n  }];\n  const onDrop = useCallback(acceptedFiles => {\n    const file = acceptedFiles[0];\n    if (file && file.type.startsWith('image/')) {\n      setFiles([{\n        ...file,\n        preview: URL.createObjectURL(file)\n      }]);\n    }\n  }, []);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setAnalyzing(true);\n    // Simulate sending data to backend and receiving a result\n    setShowModal(true);\n    setResult(\"Image analysis result here\"); // Placeholder for backend response\n  };\n\n  const handleCancel = () => {\n    setAnalyzing(false); // Show the Analyze Image button again\n  };\n\n  const handleAddToBlockchain = () => {\n    // Logic for adding to blockchain\n    console.log(\"Adding to blockchain...\");\n  };\n  const handleCloseModal = () => {\n    setShowModal(false);\n    navigate('/dashboard'); // Adjust the navigate path as needed\n  };\n\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop,\n    multiple: false\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ...getRootProps(),\n      className: `dropzone ${isDragActive ? 'active' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(Lottie, {\n        options: defaultOptions1,\n        height: 300,\n        width: 300\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 3\n      }, this), isDragActive ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drop the images here ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drag 'n' drop some images here, or click to select images\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 53\n      }, this), files.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preview-image\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: file.preview,\n          alt: \"Preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 7\n        }, this)]\n      }, file.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this)), files.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          className: \"submit-button\",\n          children: \"Analyze Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(Upload, \"AlSxuQZNi/k3cuLLkf/WIXumF08=\", false, function () {\n  return [useNavigate, useDropzone];\n});\n_c = Upload;\nexport default Upload;\nvar _c;\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["React","useCallback","useState","useNavigate","Navigation","useDropzone","Lottie","animationData1","cloudIconUrl","jsxDEV","_jsxDEV","defaultOptions1","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","Upload","_s","navigate","files","setFiles","showModal","setShowModal","result","setResult","items","lottieOptions","onDrop","acceptedFiles","file","type","startsWith","preview","URL","createObjectURL","handleSubmit","event","preventDefault","setAnalyzing","handleCancel","handleAddToBlockchain","console","log","handleCloseModal","getRootProps","getInputProps","isDragActive","multiple","className","children","fileName","_jsxFileName","lineNumber","columnNumber","options","height","width","map","src","alt","name","length","onClick","_c","$RefreshReg$"],"sources":["/Users/aditiakhauri/Desktop/Upload/new/Frontend/src/components/pages/upload.js"],"sourcesContent":["import React, { useCallback, useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport Navigation from \"../inc/navigation\";\nimport { useDropzone } from 'react-dropzone';\nimport Lottie from 'react-lottie';\nimport animationData1 from '../../assets/upload.json';\nimport '/Users/aditiakhauri/Desktop/Upload/new/Frontend/src/components/pagesCSS/UploadCSS.css'; // Adjust the path according to your project structure\nimport cloudIconUrl from '/Users/aditiakhauri/Desktop/Upload/new/Frontend/src/components/images/cloud.svg';\n\nconst defaultOptions1 = {\n  loop: true,\n  autoplay: true, \n  animationData: animationData1,\n  rendererSettings: {\n    preserveAspectRatio: 'xMidYMid slice'\n  }\n};\n\nconst Upload = () => {\n  const navigate = useNavigate();\n  const [files, setFiles] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [result, setResult] = useState('');\n  const items =[{lottieOptions: defaultOptions1}]\n\n  const onDrop = useCallback(acceptedFiles => {\n    const file = acceptedFiles[0];\n    if (file && file.type.startsWith('image/')) {\n      setFiles([{\n        ...file,\n        preview: URL.createObjectURL(file)\n      }]);\n    }\n  }, []);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setAnalyzing(true);\n    // Simulate sending data to backend and receiving a result\n    setShowModal(true);\n    setResult(\"Image analysis result here\"); // Placeholder for backend response\n  };\n  const handleCancel = () => {\n    setAnalyzing(false); // Show the Analyze Image button again\n  };\n\n  const handleAddToBlockchain = () => {\n    // Logic for adding to blockchain\n    console.log(\"Adding to blockchain...\");\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n    navigate('/dashboard'); // Adjust the navigate path as needed\n  };\n\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({\n    onDrop,\n    multiple: false,\n  });\n\n  return (\n    \n    <div className=\"upload-container\">\n      <Navigation/>\n      {/* Your component structure */}\n      <div {...getRootProps()} className={`dropzone ${isDragActive ? 'active' : ''}`}>\n  <Lottie options={defaultOptions1} height={300} width={300} />\n  <input {...getInputProps()} />\n  {isDragActive ? <p>Drop the images here ...</p> : <p>Drag 'n' drop some images here, or click to select images</p>}\n  {files.map(file => (\n    <div key={file.name} className=\"preview-image\">\n      <img src={file.preview} alt=\"Preview\" />\n      <p>{file.name}</p>\n      </div>\n  ))}\n  {/* Conditionally render the Analyze Image button right below the dropzone text */}\n  {files.length > 0 && (\n    <div>\n      <button onClick={handleSubmit} className=\"submit-button\">Analyze Image</button>\n    </div>\n  )}\n</div>\n</div>\n  );\n};\n\nexport default Upload;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}